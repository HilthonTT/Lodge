version: '3.4'

services:
  lodge-api:
    image: ${DOCKER_REGISTRY-}lodgeapi
    container_name: lodge.api
    build:
      context: .
      dockerfile: src/backend/Lodge.Api/Dockerfile
    ports:
      - 5000:5000
      - 5001:5001 

  lodge-api1:
    image: ${DOCKER_REGISTRY-}lodgeapi
    container_name: lodge.api1
    build:
      context: .
      dockerfile: src/backend/Lodge.Api/Dockerfile
    ports:
      - 6000:6000
      - 6001:6001 

  lodge-api2:
    image: ${DOCKER_REGISTRY-}lodgeapi
    container_name: lodge.api2
    build:
      context: .
      dockerfile: src/backend/Lodge.Api/Dockerfile
    ports:
      - 7000:7000
      - 7001:7001 

  yarp.balancer:
    image: ${DOCKER_REGISTRY-}yarpbalancer
    build:
      context: .
      dockerfile: src/backend/Yarp.Balancer/Dockerfile
    ports:
      - 8000:8000
      - 8001:8001 

  lodge-database:
    image: postgres:latest
    container_name: lodge.database
    environment:
      - POSTGRES_DB=lodge
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/db:/var/lib/postgresql/data
    ports:
      - 5432:5432

  lodge-queue:
    image: rabbitmq:management
    container_name: lodge.queue
    hostname: lodge-mq
    volumes:
      - ./.containers/queue/data/:/var/lib/rabbitmq
      - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  lodge-redis:
    image: redis:latest
    container_name: lodge.redis
    restart: always
    ports:
      - 6379:6379

  lodge-blob-storage:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    container_name: lodge.blob-storage
    volumes:
      - ./.containers/blob_storage/data:/data
    ports:
      - "10000:10000"
    command: "azurite-blob --blobHost 0.0.0.0 -l /data"

  lodge-seq:
    image: datalust/seq:latest
    container_name: lodge.seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 8081:80

  

